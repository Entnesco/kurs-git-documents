###basic comands###
ls - list - list of elements
ls -a - list of elements with hiden ones
cd - change root
cd .. - change root to one level lower
start . - open current location
pwd - pront current location
touch - crate file
mkdir - create folder
rm <nazwa> - delete file
rm -rf <nazwa> - delete folder
code . - open visual studio


###git commands###

#basic comands
git init - init new repo
git status - print repo status
git add <nazwa> - add file to repo
git add . - add all chenges to repo
git commit -m "example message" - commit added changes
git log - print repo's log
git log --oneline - oneline log
git commit --amend - commit new elment to previous commit

#git branch commands
git branch - list of branches
git branch <branch_name> - create new branch
git switch <branch_name> - change branch
git commit -a -m <comment> - git add. and git commit -m in one command
git checkout <branch_name> - git switch and more
git switch -c <branch_name> - create and switch to new branch
git branch -D <branch_name> - force delete branch
git branch -m <new_name> - rename branch
git branch -v - more info abaut evry branch
git branch -M <main> - rename current branch to main
git branch -r - show origin branches

#git merge command
git merge <branch_name> - merging branches

#git diff command
git diff - list of unapproved changes
git diff HEAD - list of all changes
git diff --staged - list of added files
git diff --cached - list of added files
git diff HEAD <filename> - comparison with indicated file
git diff --cached <filename> - comparison with indicated file
git diff --staged <filename> - comparison with indicated file
git diff branch1 branch2 - comprarison between two branches
git diff commit1 commit2 - comparison between two commits

#git stash command
git stash - save uncommited changes
git stash pop - release saved changes
git stash apply - paste saved changes
git stash list - list of saved changes
git stash apply stash@{2} - paste chosen stash
git stash drop stash@{2} - delete from stash list
git stash clear - clear all stash list

#git checkout command
git checkout <commit_hash> - go back to chosen commit
#if u wanna go back to current branch use "git switch"
#u can create new branch if u go back to previous commit
git checkout HEAD~1 - go back to parant
git checkout HEAD~2 - go back to grandparent~
git switch - - go back to previouse branch
git checkout HEAD <file> -to discard any changes in that file
git checkout -- <file> -to discard any changes in that file

#git restore command
git restore <file-name> - discard any changes in that file
git restore --source HEAD~1 <file> - restore file form previouse commits
git restore --staged <file> -unstage staged files

#git reset command
git reset <commit-hash> - will reset the repo back to a specific commit rest commits are gone
git reset --hard <commit-hash> - will reset the repo back to a specific commit rest commits are gone and changes are lost

#git revert command
git revert <commit-hash> - will go back to previous commit but they are not gone

#git remote command
git remote - check for connections with github print name
git remote -v - check for connections with github print links
git remote add <name(origin)> <url> - connect local repo with github repo
git remote rename <old> <new> - rename connection
git remote remove <name> - delete connection

#git push command
git push <remote> <branch> - sending work on connected github
git push <remote> <local-branch>:<remote-branch> - send files on another branch on github
git push -u <remote> <branch> - connect branch to origin
#after using above command u can just type "git push" for pushing files to github

#git clone command
git clone <url> - cloning repo

#git fetch command
git fetch <remote> - uplad changes but not merge them
git fetch <remote> <branch> - fetch one branch
